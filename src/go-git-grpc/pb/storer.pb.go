// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pb/storer.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RWStream_FlagEnum int32

const (
	RWStream_READ  RWStream_FlagEnum = 0
	RWStream_WRITE RWStream_FlagEnum = 1
)

// Enum value maps for RWStream_FlagEnum.
var (
	RWStream_FlagEnum_name = map[int32]string{
		0: "READ",
		1: "WRITE",
	}
	RWStream_FlagEnum_value = map[string]int32{
		"READ":  0,
		"WRITE": 1,
	}
)

func (x RWStream_FlagEnum) Enum() *RWStream_FlagEnum {
	p := new(RWStream_FlagEnum)
	*p = x
	return p
}

func (x RWStream_FlagEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RWStream_FlagEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_storer_proto_enumTypes[0].Descriptor()
}

func (RWStream_FlagEnum) Type() protoreflect.EnumType {
	return &file_pb_storer_proto_enumTypes[0]
}

func (x RWStream_FlagEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RWStream_FlagEnum.Descriptor instead.
func (RWStream_FlagEnum) EnumDescriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{4, 0}
}

type ObjectType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *ObjectType) Reset() {
	*x = ObjectType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectType) ProtoMessage() {}

func (x *ObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectType.ProtoReflect.Descriptor instead.
func (*ObjectType) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectType) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *ObjectType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type EncodedObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID     string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	RepoPath string `protobuf:"bytes,2,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Hash     string `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Size     int64  `protobuf:"varint,5,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *EncodedObject) Reset() {
	*x = EncodedObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodedObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodedObject) ProtoMessage() {}

func (x *EncodedObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodedObject.ProtoReflect.Descriptor instead.
func (*EncodedObject) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{1}
}

func (x *EncodedObject) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *EncodedObject) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *EncodedObject) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *EncodedObject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EncodedObject) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetEncodeObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Hash     string `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *GetEncodeObject) Reset() {
	*x = GetEncodeObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEncodeObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEncodeObject) ProtoMessage() {}

func (x *GetEncodeObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEncodeObject.ProtoReflect.Descriptor instead.
func (*GetEncodeObject) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{2}
}

func (x *GetEncodeObject) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *GetEncodeObject) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetEncodeObject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{3}
}

func (x *UUID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RWStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID     string            `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"` // uniq uuid
	Flag     RWStream_FlagEnum `protobuf:"varint,2,opt,name=Flag,proto3,enum=pb.RWStream_FlagEnum" json:"Flag,omitempty"`
	RepoPath string            `protobuf:"bytes,3,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"` // repo path
	Value    []byte            `protobuf:"bytes,4,opt,name=Value,proto3" json:"Value,omitempty"`       // buf
}

func (x *RWStream) Reset() {
	*x = RWStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RWStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RWStream) ProtoMessage() {}

func (x *RWStream) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RWStream.ProtoReflect.Descriptor instead.
func (*RWStream) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{4}
}

func (x *RWStream) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *RWStream) GetFlag() RWStream_FlagEnum {
	if x != nil {
		return x.Flag
	}
	return RWStream_READ
}

func (x *RWStream) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *RWStream) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	UUID     string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{5}
}

func (x *None) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *None) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type Int struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	UUID     string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Value    int32  `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int) Reset() {
	*x = Int{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int) ProtoMessage() {}

func (x *Int) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int.ProtoReflect.Descriptor instead.
func (*Int) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{6}
}

func (x *Int) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *Int) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Int) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Int64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	UUID     string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Value    int64  `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Int64) Reset() {
	*x = Int64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64) ProtoMessage() {}

func (x *Int64) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64.ProtoReflect.Descriptor instead.
func (*Int64) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{7}
}

func (x *Int64) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *Int64) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Int64) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Bytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Value    []byte `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Bytes) Reset() {
	*x = Bytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bytes) ProtoMessage() {}

func (x *Bytes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bytes.ProtoReflect.Descriptor instead.
func (*Bytes) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{8}
}

func (x *Bytes) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *Bytes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{9}
}

func (x *Hash) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ModuleNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
}

func (x *ModuleNames) Reset() {
	*x = ModuleNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleNames) ProtoMessage() {}

func (x *ModuleNames) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleNames.ProtoReflect.Descriptor instead.
func (*ModuleNames) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{10}
}

func (x *ModuleNames) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type ModuleName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *ModuleName) Reset() {
	*x = ModuleName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleName) ProtoMessage() {}

func (x *ModuleName) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleName.ProtoReflect.Descriptor instead.
func (*ModuleName) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{11}
}

func (x *ModuleName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath   string               `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Remotes    []*MapRemotes        `protobuf:"bytes,2,rep,name=Remotes,proto3" json:"Remotes,omitempty"`
	Submodules []*MapSubmodule      `protobuf:"bytes,3,rep,name=Submodules,proto3" json:"Submodules,omitempty"`
	Branches   []*MapBranch         `protobuf:"bytes,4,rep,name=Branches,proto3" json:"Branches,omitempty"`
	Raw        []byte               `protobuf:"bytes,5,opt,name=Raw,proto3" json:"Raw,omitempty"`
	Core       *Config_MsgCore      `protobuf:"bytes,6,opt,name=Core,proto3" json:"Core,omitempty"`
	User       *Config_MsgUser      `protobuf:"bytes,7,opt,name=User,proto3" json:"User,omitempty"`
	Author     *Config_MsgAuthor    `protobuf:"bytes,8,opt,name=Author,proto3" json:"Author,omitempty"`
	Committer  *Config_MsgCommitter `protobuf:"bytes,9,opt,name=Committer,proto3" json:"Committer,omitempty"`
	Pack       *Config_MsgPack      `protobuf:"bytes,10,opt,name=Pack,proto3" json:"Pack,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{12}
}

func (x *Config) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *Config) GetRemotes() []*MapRemotes {
	if x != nil {
		return x.Remotes
	}
	return nil
}

func (x *Config) GetSubmodules() []*MapSubmodule {
	if x != nil {
		return x.Submodules
	}
	return nil
}

func (x *Config) GetBranches() []*MapBranch {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *Config) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *Config) GetCore() *Config_MsgCore {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *Config) GetUser() *Config_MsgUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Config) GetAuthor() *Config_MsgAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Config) GetCommitter() *Config_MsgCommitter {
	if x != nil {
		return x.Committer
	}
	return nil
}

func (x *Config) GetPack() *Config_MsgPack {
	if x != nil {
		return x.Pack
	}
	return nil
}

type MapBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Branch *Branch `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *MapBranch) Reset() {
	*x = MapBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapBranch) ProtoMessage() {}

func (x *MapBranch) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapBranch.ProtoReflect.Descriptor instead.
func (*MapBranch) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{13}
}

func (x *MapBranch) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MapBranch) GetBranch() *Branch {
	if x != nil {
		return x.Branch
	}
	return nil
}

type Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Remote string `protobuf:"bytes,2,opt,name=Remote,proto3" json:"Remote,omitempty"`
	Merge  string `protobuf:"bytes,3,opt,name=Merge,proto3" json:"Merge,omitempty"`
	Rebase string `protobuf:"bytes,4,opt,name=Rebase,proto3" json:"Rebase,omitempty"` //  Subsection raw = 5;
}

func (x *Branch) Reset() {
	*x = Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{14}
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *Branch) GetMerge() string {
	if x != nil {
		return x.Merge
	}
	return ""
}

func (x *Branch) GetRebase() string {
	if x != nil {
		return x.Rebase
	}
	return ""
}

type MapSubmodule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Sub *Submodule `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub,omitempty"`
}

func (x *MapSubmodule) Reset() {
	*x = MapSubmodule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapSubmodule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSubmodule) ProtoMessage() {}

func (x *MapSubmodule) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSubmodule.ProtoReflect.Descriptor instead.
func (*MapSubmodule) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{15}
}

func (x *MapSubmodule) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MapSubmodule) GetSub() *Submodule {
	if x != nil {
		return x.Sub
	}
	return nil
}

type Submodule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	URL    string `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	Branch string `protobuf:"bytes,4,opt,name=Branch,proto3" json:"Branch,omitempty"` //  Subsection raw = 5;
}

func (x *Submodule) Reset() {
	*x = Submodule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submodule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submodule) ProtoMessage() {}

func (x *Submodule) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submodule.ProtoReflect.Descriptor instead.
func (*Submodule) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{16}
}

func (x *Submodule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Submodule) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Submodule) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Submodule) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

type MapRemotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Config *RemoteConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *MapRemotes) Reset() {
	*x = MapRemotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapRemotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapRemotes) ProtoMessage() {}

func (x *MapRemotes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapRemotes.ProtoReflect.Descriptor instead.
func (*MapRemotes) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{17}
}

func (x *MapRemotes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MapRemotes) GetConfig() *RemoteConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type RemoteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string      `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	URLs  []string    `protobuf:"bytes,2,rep,name=URLs,proto3" json:"URLs,omitempty"`
	Fetch []string    `protobuf:"bytes,3,rep,name=Fetch,proto3" json:"Fetch,omitempty"`
	Raw   *Subsection `protobuf:"bytes,4,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *RemoteConfig) Reset() {
	*x = RemoteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfig) ProtoMessage() {}

func (x *RemoteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfig.ProtoReflect.Descriptor instead.
func (*RemoteConfig) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{18}
}

func (x *RemoteConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoteConfig) GetURLs() []string {
	if x != nil {
		return x.URLs
	}
	return nil
}

func (x *RemoteConfig) GetFetch() []string {
	if x != nil {
		return x.Fetch
	}
	return nil
}

func (x *RemoteConfig) GetRaw() *Subsection {
	if x != nil {
		return x.Raw
	}
	return nil
}

type Subsection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string           `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Options []*MapFieldEntry `protobuf:"bytes,2,rep,name=Options,proto3" json:"Options,omitempty"`
}

func (x *Subsection) Reset() {
	*x = Subsection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subsection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subsection) ProtoMessage() {}

func (x *Subsection) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subsection.ProtoReflect.Descriptor instead.
func (*Subsection) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{19}
}

func (x *Subsection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subsection) GetOptions() []*MapFieldEntry {
	if x != nil {
		return x.Options
	}
	return nil
}

type ReferenceName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *ReferenceName) Reset() {
	*x = ReferenceName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceName) ProtoMessage() {}

func (x *ReferenceName) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceName.ProtoReflect.Descriptor instead.
func (*ReferenceName) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{20}
}

func (x *ReferenceName) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *ReferenceName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath        string           `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Version         uint32           `protobuf:"varint,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Entries         []*Entry         `protobuf:"bytes,3,rep,name=Entries,proto3" json:"Entries,omitempty"`
	Cache           *Tree            `protobuf:"bytes,4,opt,name=Cache,proto3" json:"Cache,omitempty"`
	ResolveUndo     *ResolveUndo     `protobuf:"bytes,5,opt,name=ResolveUndo,proto3" json:"ResolveUndo,omitempty"`
	EndOfIndexEntry *EndOfIndexEntry `protobuf:"bytes,6,opt,name=EndOfIndexEntry,proto3" json:"EndOfIndexEntry,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{21}
}

func (x *Index) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *Index) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Index) GetEntries() []*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Index) GetCache() *Tree {
	if x != nil {
		return x.Cache
	}
	return nil
}

func (x *Index) GetResolveUndo() *ResolveUndo {
	if x != nil {
		return x.ResolveUndo
	}
	return nil
}

func (x *Index) GetEndOfIndexEntry() *EndOfIndexEntry {
	if x != nil {
		return x.EndOfIndexEntry
	}
	return nil
}

type EndOfIndexEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *EndOfIndexEntry) Reset() {
	*x = EndOfIndexEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndOfIndexEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndOfIndexEntry) ProtoMessage() {}

func (x *EndOfIndexEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndOfIndexEntry.ProtoReflect.Descriptor instead.
func (*EndOfIndexEntry) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{22}
}

func (x *EndOfIndexEntry) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EndOfIndexEntry) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ResolveUndo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ResolveUndoEntry `protobuf:"bytes,1,rep,name=Entries,proto3" json:"Entries,omitempty"`
}

func (x *ResolveUndo) Reset() {
	*x = ResolveUndo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveUndo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveUndo) ProtoMessage() {}

func (x *ResolveUndo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveUndo.ProtoReflect.Descriptor instead.
func (*ResolveUndo) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{23}
}

func (x *ResolveUndo) GetEntries() []*ResolveUndoEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ResolveUndoEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string           `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Stages []*MapFieldEntry `protobuf:"bytes,2,rep,name=Stages,proto3" json:"Stages,omitempty"`
}

func (x *ResolveUndoEntry) Reset() {
	*x = ResolveUndoEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveUndoEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveUndoEntry) ProtoMessage() {}

func (x *ResolveUndoEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveUndoEntry.ProtoReflect.Descriptor instead.
func (*ResolveUndoEntry) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{24}
}

func (x *ResolveUndoEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResolveUndoEntry) GetStages() []*MapFieldEntry {
	if x != nil {
		return x.Stages
	}
	return nil
}

type MapFieldEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int64  `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MapFieldEntry) Reset() {
	*x = MapFieldEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapFieldEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapFieldEntry) ProtoMessage() {}

func (x *MapFieldEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapFieldEntry.ProtoReflect.Descriptor instead.
func (*MapFieldEntry) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{25}
}

func (x *MapFieldEntry) GetKey() int64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *MapFieldEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Tree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TreeEntry `protobuf:"bytes,1,rep,name=Entries,proto3" json:"Entries,omitempty"`
}

func (x *Tree) Reset() {
	*x = Tree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tree) ProtoMessage() {}

func (x *Tree) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tree.ProtoReflect.Descriptor instead.
func (*Tree) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{26}
}

func (x *Tree) GetEntries() []*TreeEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TreeEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Entries int64  `protobuf:"varint,2,opt,name=Entries,proto3" json:"Entries,omitempty"`
	Trees   int64  `protobuf:"varint,3,opt,name=Trees,proto3" json:"Trees,omitempty"`
	Hash    string `protobuf:"bytes,4,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *TreeEntry) Reset() {
	*x = TreeEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeEntry) ProtoMessage() {}

func (x *TreeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeEntry.ProtoReflect.Descriptor instead.
func (*TreeEntry) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{27}
}

func (x *TreeEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TreeEntry) GetEntries() int64 {
	if x != nil {
		return x.Entries
	}
	return 0
}

func (x *TreeEntry) GetTrees() int64 {
	if x != nil {
		return x.Trees
	}
	return 0
}

func (x *TreeEntry) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash         string `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	CreatedAt    int64  `protobuf:"varint,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	ModifiedAt   int64  `protobuf:"varint,4,opt,name=ModifiedAt,proto3" json:"ModifiedAt,omitempty"`
	Dev          uint32 `protobuf:"varint,5,opt,name=Dev,proto3" json:"Dev,omitempty"`
	Inode        uint32 `protobuf:"varint,6,opt,name=Inode,proto3" json:"Inode,omitempty"`
	Mode         uint32 `protobuf:"varint,7,opt,name=Mode,proto3" json:"Mode,omitempty"`
	UID          uint32 `protobuf:"varint,8,opt,name=UID,proto3" json:"UID,omitempty"`
	GID          uint32 `protobuf:"varint,9,opt,name=GID,proto3" json:"GID,omitempty"`
	Size         uint32 `protobuf:"varint,10,opt,name=Size,proto3" json:"Size,omitempty"`
	Stage        int64  `protobuf:"varint,11,opt,name=Stage,proto3" json:"Stage,omitempty"`
	SkipWorktree bool   `protobuf:"varint,12,opt,name=SkipWorktree,proto3" json:"SkipWorktree,omitempty"`
	IntentToAdd  bool   `protobuf:"varint,13,opt,name=IntentToAdd,proto3" json:"IntentToAdd,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{28}
}

func (x *Entry) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Entry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entry) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Entry) GetModifiedAt() int64 {
	if x != nil {
		return x.ModifiedAt
	}
	return 0
}

func (x *Entry) GetDev() uint32 {
	if x != nil {
		return x.Dev
	}
	return 0
}

func (x *Entry) GetInode() uint32 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Entry) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Entry) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *Entry) GetGID() uint32 {
	if x != nil {
		return x.GID
	}
	return 0
}

func (x *Entry) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Entry) GetStage() int64 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *Entry) GetSkipWorktree() bool {
	if x != nil {
		return x.SkipWorktree
	}
	return false
}

func (x *Entry) GetIntentToAdd() bool {
	if x != nil {
		return x.IntentToAdd
	}
	return false
}

type Hashs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string   `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	Hash     []string `protobuf:"bytes,2,rep,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *Hashs) Reset() {
	*x = Hashs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hashs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hashs) ProtoMessage() {}

func (x *Hashs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hashs.ProtoReflect.Descriptor instead.
func (*Hashs) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{29}
}

func (x *Hashs) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *Hashs) GetHash() []string {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	T        string `protobuf:"bytes,2,opt,name=T,proto3" json:"T,omitempty"`
	N        string `protobuf:"bytes,3,opt,name=N,proto3" json:"N,omitempty"`
	H        string `protobuf:"bytes,4,opt,name=H,proto3" json:"H,omitempty"`
	Target   string `protobuf:"bytes,5,opt,name=Target,proto3" json:"Target,omitempty"`
}

func (x *Reference) Reset() {
	*x = Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{30}
}

func (x *Reference) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *Reference) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

func (x *Reference) GetN() string {
	if x != nil {
		return x.N
	}
	return ""
}

func (x *Reference) GetH() string {
	if x != nil {
		return x.H
	}
	return ""
}

func (x *Reference) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type References struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refs []*Reference `protobuf:"bytes,1,rep,name=refs,proto3" json:"refs,omitempty"`
}

func (x *References) Reset() {
	*x = References{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *References) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*References) ProtoMessage() {}

func (x *References) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use References.ProtoReflect.Descriptor instead.
func (*References) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{31}
}

func (x *References) GetRefs() []*Reference {
	if x != nil {
		return x.Refs
	}
	return nil
}

type SetReferenceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoPath string     `protobuf:"bytes,1,opt,name=RepoPath,proto3" json:"RepoPath,omitempty"`
	New      *Reference `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
	Old      *Reference `protobuf:"bytes,3,opt,name=old,proto3" json:"old,omitempty"`
}

func (x *SetReferenceParams) Reset() {
	*x = SetReferenceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetReferenceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReferenceParams) ProtoMessage() {}

func (x *SetReferenceParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReferenceParams.ProtoReflect.Descriptor instead.
func (*SetReferenceParams) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{32}
}

func (x *SetReferenceParams) GetRepoPath() string {
	if x != nil {
		return x.RepoPath
	}
	return ""
}

func (x *SetReferenceParams) GetNew() *Reference {
	if x != nil {
		return x.New
	}
	return nil
}

func (x *SetReferenceParams) GetOld() *Reference {
	if x != nil {
		return x.Old
	}
	return nil
}

type Config_MsgCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBare      bool   `protobuf:"varint,1,opt,name=IsBare,proto3" json:"IsBare,omitempty"`
	Worktree    string `protobuf:"bytes,2,opt,name=Worktree,proto3" json:"Worktree,omitempty"`
	CommentChar string `protobuf:"bytes,3,opt,name=CommentChar,proto3" json:"CommentChar,omitempty"`
}

func (x *Config_MsgCore) Reset() {
	*x = Config_MsgCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MsgCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MsgCore) ProtoMessage() {}

func (x *Config_MsgCore) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MsgCore.ProtoReflect.Descriptor instead.
func (*Config_MsgCore) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Config_MsgCore) GetIsBare() bool {
	if x != nil {
		return x.IsBare
	}
	return false
}

func (x *Config_MsgCore) GetWorktree() string {
	if x != nil {
		return x.Worktree
	}
	return ""
}

func (x *Config_MsgCore) GetCommentChar() string {
	if x != nil {
		return x.CommentChar
	}
	return ""
}

type Config_MsgUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *Config_MsgUser) Reset() {
	*x = Config_MsgUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MsgUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MsgUser) ProtoMessage() {}

func (x *Config_MsgUser) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MsgUser.ProtoReflect.Descriptor instead.
func (*Config_MsgUser) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Config_MsgUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config_MsgUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Config_MsgAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *Config_MsgAuthor) Reset() {
	*x = Config_MsgAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MsgAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MsgAuthor) ProtoMessage() {}

func (x *Config_MsgAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MsgAuthor.ProtoReflect.Descriptor instead.
func (*Config_MsgAuthor) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{12, 2}
}

func (x *Config_MsgAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config_MsgAuthor) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Config_MsgCommitter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *Config_MsgCommitter) Reset() {
	*x = Config_MsgCommitter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MsgCommitter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MsgCommitter) ProtoMessage() {}

func (x *Config_MsgCommitter) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MsgCommitter.ProtoReflect.Descriptor instead.
func (*Config_MsgCommitter) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{12, 3}
}

func (x *Config_MsgCommitter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config_MsgCommitter) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Config_MsgPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Window uint64 `protobuf:"varint,1,opt,name=Window,proto3" json:"Window,omitempty"`
}

func (x *Config_MsgPack) Reset() {
	*x = Config_MsgPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_storer_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MsgPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MsgPack) ProtoMessage() {}

func (x *Config_MsgPack) ProtoReflect() protoreflect.Message {
	mi := &file_pb_storer_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MsgPack.ProtoReflect.Descriptor instead.
func (*Config_MsgPack) Descriptor() ([]byte, []int) {
	return file_pb_storer_proto_rawDescGZIP(), []int{12, 4}
}

func (x *Config_MsgPack) GetWindow() uint64 {
	if x != nil {
		return x.Window
	}
	return 0
}

var File_pb_storer_proto protoreflect.FileDescriptor

var file_pb_storer_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x3c, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x08, 0x52, 0x57, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x57, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x08, 0x46, 0x6c, 0x61, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49,
	0x54, 0x45, 0x10, 0x01, 0x22, 0x36, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x03,
	0x49, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x23, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc4, 0x05, 0x0a, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x28, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73,
	0x52, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x53, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x0a, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x08, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x52, 0x61, 0x77, 0x12, 0x26, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x72, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x04, 0x50, 0x61, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x04, 0x50, 0x61, 0x63, 0x6b, 0x1a, 0x5f, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x42, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x49, 0x73, 0x42, 0x61, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b,
	0x74, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b,
	0x74, 0x72, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x1a, 0x33, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x35, 0x0a, 0x09, 0x4d,
	0x73, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x1a, 0x38, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x21, 0x0a, 0x07,
	0x4d, 0x73, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22,
	0x41, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22,
	0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x22, 0x62, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x62, 0x61, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x53, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x03, 0x73, 0x75, 0x62, 0x22, 0x5d, 0x0a, 0x09, 0x53, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x12, 0x16, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x48, 0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x6e, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x52, 0x4c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x12, 0x20, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x72,
	0x61, 0x77, 0x22, 0x4d, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x3f, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x55, 0x6e, 0x64, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x55, 0x6e, 0x64, 0x6f, 0x52, 0x0b, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x55, 0x6e, 0x64, 0x6f, 0x12, 0x3d, 0x0a, 0x0f, 0x45, 0x6e,
	0x64, 0x4f, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x64, 0x4f, 0x66, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x45, 0x6e, 0x64, 0x4f, 0x66, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x45, 0x6e, 0x64,
	0x4f, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3d, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x55, 0x6e, 0x64, 0x6f, 0x12, 0x2e, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x55, 0x6e, 0x64, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x55, 0x6e, 0x64, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x0d, 0x4d, 0x61,
	0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x09, 0x54, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x72, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x72, 0x65, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0xbd, 0x02, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x65, 0x76,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x44, 0x65, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x47, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6b, 0x69, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x74,
	0x72, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x53, 0x6b, 0x69, 0x70, 0x57,
	0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x22, 0x37, 0x0a, 0x05, 0x48, 0x61, 0x73,
	0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x69, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x0c, 0x0a, 0x01, 0x54,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x54, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x4e, 0x12, 0x0c, 0x0a, 0x01, 0x48, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x48, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x2f, 0x0a,
	0x0a, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x72,
	0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x72, 0x65, 0x66, 0x73, 0x22, 0x72,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1f, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x03, 0x6e, 0x65,
	0x77, 0x12, 0x1f, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x03, 0x6f,
	0x6c, 0x64, 0x32, 0xc9, 0x09, 0x0a, 0x06, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x10, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x00, 0x12, 0x2b, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x6e, 0x74, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x30,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x13, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x28, 0x0a, 0x11, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65,
	0x1a, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x11, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x11, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x22, 0x00, 0x12, 0x39, 0x0a, 0x15, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x57, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x57, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x57, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x32, 0x0a,
	0x14, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x11, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x14, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x61, 0x63, 0x68, 0x12, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2a,
	0x0a, 0x12, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e,
	0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6e,
	0x64, 0x53, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65,
	0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x30, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f,
	0x6e, 0x65, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x66, 0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65,
	0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x22, 0x00, 0x12, 0x20, 0x0a,
	0x08, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e,
	0x6f, 0x6e, 0x65, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12,
	0x23, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x53, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x73, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f,
	0x6e, 0x65, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x07, 0x53, 0x68, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x12,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x73, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e,
	0x6f, 0x6e, 0x65, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x00, 0x12, 0x23, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x00, 0x42, 0x25,
	0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x6f,
	0x77, 0x65, 0x72, 0x6c, 0x61, 0x62, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x69, 0x74, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_storer_proto_rawDescOnce sync.Once
	file_pb_storer_proto_rawDescData = file_pb_storer_proto_rawDesc
)

func file_pb_storer_proto_rawDescGZIP() []byte {
	file_pb_storer_proto_rawDescOnce.Do(func() {
		file_pb_storer_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_storer_proto_rawDescData)
	})
	return file_pb_storer_proto_rawDescData
}

var file_pb_storer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_storer_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_pb_storer_proto_goTypes = []interface{}{
	(RWStream_FlagEnum)(0),      // 0: pb.RWStream.FlagEnum
	(*ObjectType)(nil),          // 1: pb.ObjectType
	(*EncodedObject)(nil),       // 2: pb.EncodedObject
	(*GetEncodeObject)(nil),     // 3: pb.GetEncodeObject
	(*UUID)(nil),                // 4: pb.UUID
	(*RWStream)(nil),            // 5: pb.RWStream
	(*None)(nil),                // 6: pb.None
	(*Int)(nil),                 // 7: pb.Int
	(*Int64)(nil),               // 8: pb.Int64
	(*Bytes)(nil),               // 9: pb.Bytes
	(*Hash)(nil),                // 10: pb.Hash
	(*ModuleNames)(nil),         // 11: pb.ModuleNames
	(*ModuleName)(nil),          // 12: pb.ModuleName
	(*Config)(nil),              // 13: pb.Config
	(*MapBranch)(nil),           // 14: pb.MapBranch
	(*Branch)(nil),              // 15: pb.Branch
	(*MapSubmodule)(nil),        // 16: pb.MapSubmodule
	(*Submodule)(nil),           // 17: pb.Submodule
	(*MapRemotes)(nil),          // 18: pb.MapRemotes
	(*RemoteConfig)(nil),        // 19: pb.RemoteConfig
	(*Subsection)(nil),          // 20: pb.Subsection
	(*ReferenceName)(nil),       // 21: pb.ReferenceName
	(*Index)(nil),               // 22: pb.Index
	(*EndOfIndexEntry)(nil),     // 23: pb.EndOfIndexEntry
	(*ResolveUndo)(nil),         // 24: pb.ResolveUndo
	(*ResolveUndoEntry)(nil),    // 25: pb.ResolveUndoEntry
	(*MapFieldEntry)(nil),       // 26: pb.MapFieldEntry
	(*Tree)(nil),                // 27: pb.Tree
	(*TreeEntry)(nil),           // 28: pb.TreeEntry
	(*Entry)(nil),               // 29: pb.Entry
	(*Hashs)(nil),               // 30: pb.Hashs
	(*Reference)(nil),           // 31: pb.Reference
	(*References)(nil),          // 32: pb.References
	(*SetReferenceParams)(nil),  // 33: pb.SetReferenceParams
	(*Config_MsgCore)(nil),      // 34: pb.Config.MsgCore
	(*Config_MsgUser)(nil),      // 35: pb.Config.MsgUser
	(*Config_MsgAuthor)(nil),    // 36: pb.Config.MsgAuthor
	(*Config_MsgCommitter)(nil), // 37: pb.Config.MsgCommitter
	(*Config_MsgPack)(nil),      // 38: pb.Config.MsgPack
}
var file_pb_storer_proto_depIdxs = []int32{
	0,  // 0: pb.RWStream.Flag:type_name -> pb.RWStream.FlagEnum
	18, // 1: pb.Config.Remotes:type_name -> pb.MapRemotes
	16, // 2: pb.Config.Submodules:type_name -> pb.MapSubmodule
	14, // 3: pb.Config.Branches:type_name -> pb.MapBranch
	34, // 4: pb.Config.Core:type_name -> pb.Config.MsgCore
	35, // 5: pb.Config.User:type_name -> pb.Config.MsgUser
	36, // 6: pb.Config.Author:type_name -> pb.Config.MsgAuthor
	37, // 7: pb.Config.Committer:type_name -> pb.Config.MsgCommitter
	38, // 8: pb.Config.Pack:type_name -> pb.Config.MsgPack
	15, // 9: pb.MapBranch.branch:type_name -> pb.Branch
	17, // 10: pb.MapSubmodule.sub:type_name -> pb.Submodule
	19, // 11: pb.MapRemotes.config:type_name -> pb.RemoteConfig
	20, // 12: pb.RemoteConfig.raw:type_name -> pb.Subsection
	26, // 13: pb.Subsection.Options:type_name -> pb.MapFieldEntry
	29, // 14: pb.Index.Entries:type_name -> pb.Entry
	27, // 15: pb.Index.Cache:type_name -> pb.Tree
	24, // 16: pb.Index.ResolveUndo:type_name -> pb.ResolveUndo
	23, // 17: pb.Index.EndOfIndexEntry:type_name -> pb.EndOfIndexEntry
	25, // 18: pb.ResolveUndo.Entries:type_name -> pb.ResolveUndoEntry
	26, // 19: pb.ResolveUndoEntry.Stages:type_name -> pb.MapFieldEntry
	28, // 20: pb.Tree.Entries:type_name -> pb.TreeEntry
	31, // 21: pb.References.refs:type_name -> pb.Reference
	31, // 22: pb.SetReferenceParams.new:type_name -> pb.Reference
	31, // 23: pb.SetReferenceParams.old:type_name -> pb.Reference
	6,  // 24: pb.Storer.NewEncodedObject:input_type -> pb.None
	4,  // 25: pb.Storer.SetEncodedObject:input_type -> pb.UUID
	7,  // 26: pb.Storer.SetEncodedObjectType:input_type -> pb.Int
	8,  // 27: pb.Storer.SetEncodedObjectSetSize:input_type -> pb.Int64
	3,  // 28: pb.Storer.EncodedObjectEntity:input_type -> pb.GetEncodeObject
	6,  // 29: pb.Storer.EncodedObjectType:input_type -> pb.None
	6,  // 30: pb.Storer.EncodedObjectHash:input_type -> pb.None
	6,  // 31: pb.Storer.EncodedObjectSize:input_type -> pb.None
	5,  // 32: pb.Storer.EncodedObjectRWStream:input_type -> pb.RWStream
	1,  // 33: pb.Storer.NewEncodedObjectIter:input_type -> pb.ObjectType
	6,  // 34: pb.Storer.EncodedObjectNext:input_type -> pb.None
	6,  // 35: pb.Storer.EncodedObjectForEach:input_type -> pb.None
	6,  // 36: pb.Storer.EncodedObjectClose:input_type -> pb.None
	31, // 37: pb.Storer.SetReference:input_type -> pb.Reference
	33, // 38: pb.Storer.CheckAndSetReference:input_type -> pb.SetReferenceParams
	21, // 39: pb.Storer.GetReference:input_type -> pb.ReferenceName
	6,  // 40: pb.Storer.GetReferences:input_type -> pb.None
	21, // 41: pb.Storer.RemoveReference:input_type -> pb.ReferenceName
	6,  // 42: pb.Storer.CountLooseRefs:input_type -> pb.None
	6,  // 43: pb.Storer.PackRefs:input_type -> pb.None
	30, // 44: pb.Storer.SetShallow:input_type -> pb.Hashs
	6,  // 45: pb.Storer.Shallow:input_type -> pb.None
	22, // 46: pb.Storer.SetIndex:input_type -> pb.Index
	6,  // 47: pb.Storer.GetIndex:input_type -> pb.None
	6,  // 48: pb.Storer.GetConfig:input_type -> pb.None
	13, // 49: pb.Storer.SetConfig:input_type -> pb.Config
	6,  // 50: pb.Storer.Modules:input_type -> pb.None
	4,  // 51: pb.Storer.NewEncodedObject:output_type -> pb.UUID
	10, // 52: pb.Storer.SetEncodedObject:output_type -> pb.Hash
	6,  // 53: pb.Storer.SetEncodedObjectType:output_type -> pb.None
	6,  // 54: pb.Storer.SetEncodedObjectSetSize:output_type -> pb.None
	2,  // 55: pb.Storer.EncodedObjectEntity:output_type -> pb.EncodedObject
	7,  // 56: pb.Storer.EncodedObjectType:output_type -> pb.Int
	10, // 57: pb.Storer.EncodedObjectHash:output_type -> pb.Hash
	8,  // 58: pb.Storer.EncodedObjectSize:output_type -> pb.Int64
	5,  // 59: pb.Storer.EncodedObjectRWStream:output_type -> pb.RWStream
	6,  // 60: pb.Storer.NewEncodedObjectIter:output_type -> pb.None
	2,  // 61: pb.Storer.EncodedObjectNext:output_type -> pb.EncodedObject
	2,  // 62: pb.Storer.EncodedObjectForEach:output_type -> pb.EncodedObject
	6,  // 63: pb.Storer.EncodedObjectClose:output_type -> pb.None
	6,  // 64: pb.Storer.SetReference:output_type -> pb.None
	6,  // 65: pb.Storer.CheckAndSetReference:output_type -> pb.None
	31, // 66: pb.Storer.GetReference:output_type -> pb.Reference
	32, // 67: pb.Storer.GetReferences:output_type -> pb.References
	6,  // 68: pb.Storer.RemoveReference:output_type -> pb.None
	8,  // 69: pb.Storer.CountLooseRefs:output_type -> pb.Int64
	6,  // 70: pb.Storer.PackRefs:output_type -> pb.None
	6,  // 71: pb.Storer.SetShallow:output_type -> pb.None
	30, // 72: pb.Storer.Shallow:output_type -> pb.Hashs
	6,  // 73: pb.Storer.SetIndex:output_type -> pb.None
	22, // 74: pb.Storer.GetIndex:output_type -> pb.Index
	13, // 75: pb.Storer.GetConfig:output_type -> pb.Config
	6,  // 76: pb.Storer.SetConfig:output_type -> pb.None
	11, // 77: pb.Storer.Modules:output_type -> pb.ModuleNames
	51, // [51:78] is the sub-list for method output_type
	24, // [24:51] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_pb_storer_proto_init() }
func file_pb_storer_proto_init() {
	if File_pb_storer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_storer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodedObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEncodeObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RWStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapSubmodule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submodule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapRemotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subsection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndOfIndexEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveUndo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveUndoEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapFieldEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hashs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*References); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetReferenceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MsgCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MsgUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MsgAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MsgCommitter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_storer_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MsgPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_storer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_storer_proto_goTypes,
		DependencyIndexes: file_pb_storer_proto_depIdxs,
		EnumInfos:         file_pb_storer_proto_enumTypes,
		MessageInfos:      file_pb_storer_proto_msgTypes,
	}.Build()
	File_pb_storer_proto = out.File
	file_pb_storer_proto_rawDesc = nil
	file_pb_storer_proto_goTypes = nil
	file_pb_storer_proto_depIdxs = nil
}
